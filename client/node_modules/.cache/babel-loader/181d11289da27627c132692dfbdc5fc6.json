{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jessi\\\\OneDrive\\\\Documents\\\\GitHub\\\\plant-sta\\\\client\\\\src\\\\Upload.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Snackbar from '@material-ui/core/Snackbar'; // import MuiAlert from '@material-ui/lab/Alert';\n// function Alert(props) {\n//   return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n// }\n\nimport { storage, firebase } from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2)\n  },\n  resetContainer: {\n    padding: theme.spacing(3)\n  }\n}));\nexport function VerticalLinearStepper(props) {\n  _s();\n\n  const classes = useStyles(); // const [currentUser, setCurrentUser] = useState(props.user)\n\n  const [activeStep, setActiveStep] = useState(0);\n  const [imageAsFile, setImageAsFile] = useState('');\n  const [imageAsUrl, setImageAsUrl] = useState('');\n  const [stage, setStage] = useState(\"Seed\");\n  const [forSale, setForSale] = useState(false);\n  const [plant, setPlant] = useState(\"\");\n  const [variety, setvariety] = useState(\"\");\n  const [caption, setCaption] = useState(\"\");\n  const [uploadStatus, setUploadStatus] = useState(\"\");\n  const storageRef = storage.ref();\n\n  const handleImageAsFile = e => {\n    const image = e.target.files[0];\n    setImageAsFile(imageAsFile => image);\n  };\n\n  const imageFileType = name => {\n    if (name.endsWith(\".jpg\") || name.endsWith(\".jpeg\") || name.endsWith(\".png\")) return true;\n    return false;\n  };\n\n  const handleFireBaseUpload = (user = props.user) => {\n    // e.preventDefault()\n    console.log('start of upload'); // async magic goes here...\n\n    if (imageAsFile === '' || !imageFileType(imageAsFile.name)) {\n      let errorMsg = `not a jpeg/png image, the image file is a ${typeof imageAsFile}`;\n      setUploadStatus(\"error: \" + errorMsg);\n    } else {\n      var current = new Date().valueOf();\n      const url = `/images/${current}${imageAsFile.name}`;\n      const imageRef = storageRef.child(url);\n      var uploadTask = imageRef.put(imageAsFile);\n      uploadTask.on('state_changed', snapshot => {\n        // Observe state change events such as progress, pause, and resume\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n        var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n        setUploadStatus(progress);\n        console.log('Upload is ' + progress + '% done');\n\n        switch (snapshot.state) {\n          case firebase.storage.TaskState.PAUSED:\n            // or 'paused'\n            console.log('Upload is paused');\n            break;\n\n          case firebase.storage.TaskState.RUNNING:\n            // or 'running'\n            console.log('Upload is running');\n            break;\n        }\n      }, error => {\n        // Handle unsuccessful uploads\n        console.log(\"error\");\n        setUploadStatus(\"error\");\n      }, () => {\n        // Handle successful uploads on complete\n        // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n        uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n          console.log('File available at', downloadURL);\n          setImageAsUrl(downloadURL);\n          onPostData(downloadURL, user);\n          setUploadStatus(\"success\");\n        });\n      });\n    }\n  };\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const onPostData = async (downloadURL, user) => {\n    try {\n      const email = user ? user.email : \"anonymous\";\n      const plantName = plant ? plant : \"Unknown Plant\";\n      const body = {\n        user_id: email,\n        plant: plantName,\n        for_sale: forSale,\n        image: downloadURL,\n        variety: variety,\n        stage: stage,\n        caption: caption\n      };\n      console.log(body);\n      const response = await fetch(\"http://localhost:5000/plants\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      console.log(response);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleSubmit = async () => {\n    setOpen(true); // check if signed in, if not, vreate anonymous session\n\n    if (!props.user) {\n      await firebase.auth().signInAnonymously().then(result => {\n        console.log(result.user);\n        const tempUser = {\n          'uid': result.user.uid,\n          'email': \"anon-user-\" + result.user.uid,\n          'isAnonymous': true\n        };\n        props.setUserFunction(tempUser);\n        handleFireBaseUpload(tempUser); // setCurrentUser(tempUser)\n        // Signed in..\n      }).catch(error => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        console.log(error.message); // ...\n      });\n    } else {\n      handleFireBaseUpload();\n    } // props.handleClose();\n\n  };\n\n  const handleStageChange = e => {\n    setStage(e.target.value);\n  };\n\n  const steps = ['Create a Plant Profile', 'Upload your post'];\n\n  const getStepContent = step => {\n    switch (step) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              id: \"standard-required\",\n              label: \"Plant\",\n              defaultValue: \"\",\n              onChange: e => setPlant(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-required\",\n              label: \"Variety \",\n              defaultValue: \"\",\n              onChange: e => setvariety(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: forSale,\n                onChange: e => {\n                  setForSale(e.target.checked);\n                },\n                name: \"forSale\",\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 23\n              }, this),\n              label: \"For Sale\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 16\n        }, this);\n\n      case 1:\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: handleImageAsFile // hidden\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              className: classes.formControl,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"demo-simple-select-label\",\n                children: \"Stage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"demo-simple-select-label\",\n                id: \"demo-simple-select\",\n                value: stage,\n                onChange: handleStageChange,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Seed\",\n                  children: \"Seed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Seedling\",\n                  children: \"Seedling\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Flowering\",\n                  children: \"Flowering\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Fruiting\",\n                  children: \"Fruiting\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Mature\",\n                  children: \"Mature\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-required\",\n              label: \"Caption\",\n              defaultValue: \"\",\n              onChange: e => setCaption(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 16\n        }, this);\n\n      default:\n        return 'Unknown step';\n    }\n  };\n\n  const [open, setOpen] = useState(false);\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    if (uploadStatus == \"success\") {\n      props.handleClose();\n      props.reloadFunction();\n    }\n  }, [uploadStatus]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Stepper, {\n      activeStep: activeStep,\n      orientation: \"vertical\",\n      children: steps.map((label, index) => /*#__PURE__*/_jsxDEV(Step, {\n        children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: getStepContent(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.actionsContainer,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: activeStep === steps.length - 1 ? handleSubmit : handleNext,\n                className: classes.button,\n                disabled: uploadStatus != \"\",\n                children: activeStep === steps.length - 1 ? 'Finish' : 'Next'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this)]\n      }, label, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: open,\n      message: uploadStatus + '%',\n      action: /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          \"aria-label\": \"close\",\n          color: \"inherit\",\n          onClick: handleClose,\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 299,\n    columnNumber: 5\n  }, this);\n}\n\n_s(VerticalLinearStepper, \"bpe+tYfFCyjBOf+pa0tKhh1mwpc=\", false, function () {\n  return [useStyles];\n});\n\n_c = VerticalLinearStepper;\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const {\n    children,\n    classes,\n    onClose,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(MuiDialogTitle, {\n    disableTypography: true,\n    className: classes.root,\n    ...other,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 9\n    }, this), onClose ? /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"close\",\n      className: classes.closeButton,\n      onClick: onClose,\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 11\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 356,\n    columnNumber: 7\n  }, this);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1)\n  }\n}))(MuiDialogActions);\nexport default function CustomizedDialogs(props) {\n  _s2();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: handleClickOpen,\n      children: \"Upload Plant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      onClose: handleClose,\n      \"aria-labelledby\": \"customized-dialog-title\",\n      open: open,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"customized-dialog-title\",\n        onClose: handleClose,\n        children: \"New Plant Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: /*#__PURE__*/_jsxDEV(VerticalLinearStepper, {\n          handleClose: handleClose,\n          user: props.user,\n          setUserFunction: props.setUserFunction,\n          reloadFunction: props.reloadFunction\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 392,\n    columnNumber: 7\n  }, this);\n}\n\n_s2(CustomizedDialogs, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c2 = CustomizedDialogs;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"VerticalLinearStepper\");\n$RefreshReg$(_c2, \"CustomizedDialogs\");","map":{"version":3,"sources":["C:/Users/jessi/OneDrive/Documents/GitHub/plant-sta/client/src/Upload.js"],"names":["React","useState","useEffect","withStyles","makeStyles","Button","Dialog","MuiDialogTitle","MuiDialogContent","MuiDialogActions","IconButton","CloseIcon","Typography","TextField","Stepper","Step","StepLabel","StepContent","FormControlLabel","Checkbox","InputLabel","MenuItem","FormHelperText","FormControl","Select","Snackbar","storage","firebase","useStyles","theme","root","width","button","marginTop","spacing","marginRight","actionsContainer","marginBottom","resetContainer","padding","VerticalLinearStepper","props","classes","activeStep","setActiveStep","imageAsFile","setImageAsFile","imageAsUrl","setImageAsUrl","stage","setStage","forSale","setForSale","plant","setPlant","variety","setvariety","caption","setCaption","uploadStatus","setUploadStatus","storageRef","ref","handleImageAsFile","e","image","target","files","imageFileType","name","endsWith","handleFireBaseUpload","user","console","log","errorMsg","current","Date","valueOf","url","imageRef","child","uploadTask","put","on","snapshot","progress","bytesTransferred","totalBytes","state","TaskState","PAUSED","RUNNING","error","getDownloadURL","then","downloadURL","onPostData","handleNext","prevActiveStep","handleBack","email","plantName","body","user_id","for_sale","response","fetch","method","headers","JSON","stringify","err","handleSubmit","setOpen","auth","signInAnonymously","result","tempUser","uid","setUserFunction","catch","errorCode","code","errorMessage","message","handleStageChange","value","steps","getStepContent","step","checked","formControl","open","handleClose","event","reason","reloadFunction","map","label","index","length","styles","margin","closeButton","position","right","top","color","palette","grey","DialogTitle","children","onClose","other","DialogContent","DialogActions","CustomizedDialogs","handleClickOpen"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAwC,OAAxC;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,0BAAvC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB,C,CACA;AAEA;AACA;AACA;;AAGA,SAAQC,OAAR,EAAiBC,QAAjB,QAAgC,OAAhC;;AAEA,MAAMC,SAAS,GAAGxB,UAAU,CAAEyB,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH,GADiC;AAIvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,SAAS,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CADL;AAENC,IAAAA,WAAW,EAAEN,KAAK,CAACK,OAAN,CAAc,CAAd;AAFP,GAJ+B;AAQvCE,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,YAAY,EAAER,KAAK,CAACK,OAAN,CAAc,CAAd;AADE,GARqB;AAWvCI,EAAAA,cAAc,EAAE;AACdC,IAAAA,OAAO,EAAEV,KAAK,CAACK,OAAN,CAAc,CAAd;AADK;AAXuB,CAAZ,CAAD,CAA5B;AAkBA,OAAO,SAASM,qBAAT,CAA+BC,KAA/B,EAAsC;AAAA;;AAE3C,QAAMC,OAAO,GAAGd,SAAS,EAAzB,CAF2C,CAI3C;;AACA,QAAM,CAACe,UAAD,EAAaC,aAAb,IAA8B3C,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAAC4C,WAAD,EAAcC,cAAd,IAAgC7C,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAC8C,UAAD,EAAaC,aAAb,IAA8B/C,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACgD,KAAD,EAAQC,QAAR,IAAoBjD,QAAQ,CAAC,MAAD,CAAlC;AACA,QAAM,CAACkD,OAAD,EAAUC,UAAV,IAAwBnD,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACoD,KAAD,EAAQC,QAAR,IAAoBrD,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACsD,OAAD,EAAUC,UAAV,IAAwBvD,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACwD,OAAD,EAAUC,UAAV,IAAwBzD,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAC0D,YAAD,EAAeC,eAAf,IAAkC3D,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAM4D,UAAU,GAAGnC,OAAO,CAACoC,GAAR,EAAnB;;AAGA,QAAMC,iBAAiB,GAAIC,CAAD,IAAO;AAC/B,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAd;AACArB,IAAAA,cAAc,CAACD,WAAW,IAAKoB,KAAjB,CAAd;AACD,GAHD;;AAMA,QAAMG,aAAa,GAAIC,IAAD,IAAU;AAC9B,QAAIA,IAAI,CAACC,QAAL,CAAc,MAAd,KAAyBD,IAAI,CAACC,QAAL,CAAc,OAAd,CAAzB,IAAmDD,IAAI,CAACC,QAAL,CAAc,MAAd,CAAvD,EAA8E,OAAO,IAAP;AAE9E,WAAO,KAAP;AACD,GAJD;;AAMA,QAAMC,oBAAoB,GAAG,CAACC,IAAI,GAAG/B,KAAK,CAAC+B,IAAd,KAAuB;AAClD;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAFkD,CAGlD;;AAEA,QAAG7B,WAAW,KAAK,EAAhB,IAAsB,CAACuB,aAAa,CAACvB,WAAW,CAACwB,IAAb,CAAvC,EAA4D;AACxD,UAAIM,QAAQ,GAAI,6CAA4C,OAAO9B,WAAa,EAAhF;AACAe,MAAAA,eAAe,CAAC,YAAWe,QAAZ,CAAf;AACH,KAHD,MAGM;AACF,UAAIC,OAAO,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAd;AACA,YAAMC,GAAG,GAAI,WAAUH,OAAQ,GAAE/B,WAAW,CAACwB,IAAK,EAAlD;AACA,YAAMW,QAAQ,GAAGnB,UAAU,CAACoB,KAAX,CAAiBF,GAAjB,CAAjB;AAEA,UAAIG,UAAU,GAAGF,QAAQ,CAACG,GAAT,CAAatC,WAAb,CAAjB;AAEAqC,MAAAA,UAAU,CAACE,EAAX,CAAc,eAAd,EACKC,QAAD,IAAc;AACd;AACA;AACA,YAAIC,QAAQ,GAAID,QAAQ,CAACE,gBAAT,GAA4BF,QAAQ,CAACG,UAAtC,GAAoD,GAAnE;AACA5B,QAAAA,eAAe,CAAC0B,QAAD,CAAf;AACAb,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAeY,QAAf,GAA0B,QAAtC;;AACA,gBAAQD,QAAQ,CAACI,KAAjB;AACI,eAAK9D,QAAQ,CAACD,OAAT,CAAiBgE,SAAjB,CAA2BC,MAAhC;AAAwC;AACxClB,YAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA;;AACA,eAAK/C,QAAQ,CAACD,OAAT,CAAiBgE,SAAjB,CAA2BE,OAAhC;AAAyC;AACzCnB,YAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA;AANJ;AAQC,OAfL,EAgBKmB,KAAD,IAAW;AACX;AACIpB,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAd,QAAAA,eAAe,CAAC,OAAD,CAAf;AAEH,OArBL,EAsBI,MAAM;AACF;AACA;AACAsB,QAAAA,UAAU,CAACG,QAAX,CAAoBvB,GAApB,CAAwBgC,cAAxB,GAAyCC,IAAzC,CAA+CC,WAAD,IAAiB;AAC7DvB,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCsB,WAAjC;AACAhD,UAAAA,aAAa,CAACgD,WAAD,CAAb;AACAC,UAAAA,UAAU,CAACD,WAAD,EAAcxB,IAAd,CAAV;AACAZ,UAAAA,eAAe,CAAC,SAAD,CAAf;AACD,SALD;AAMD,OA/BP;AAkCH;AAGF,GApDD;;AAsDA,QAAMsC,UAAU,GAAG,MAAM;AACvBtD,IAAAA,aAAa,CAAEuD,cAAD,IAAoBA,cAAc,GAAG,CAAtC,CAAb;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACvBxD,IAAAA,aAAa,CAAEuD,cAAD,IAAoBA,cAAc,GAAG,CAAtC,CAAb;AACD,GAFD;;AAIA,QAAMF,UAAU,GAAG,OAAOD,WAAP,EAAoBxB,IAApB,KAA6B;AAE9C,QAAI;AACA,YAAM6B,KAAK,GAAG7B,IAAI,GAAGA,IAAI,CAAC6B,KAAR,GAAgB,WAAlC;AACA,YAAMC,SAAS,GAAGjD,KAAK,GAAEA,KAAF,GAAS,eAAhC;AAEA,YAAMkD,IAAI,GAAG;AACTC,QAAAA,OAAO,EAAGH,KADD;AAEThD,QAAAA,KAAK,EAAEiD,SAFE;AAGTG,QAAAA,QAAQ,EAAEtD,OAHD;AAITc,QAAAA,KAAK,EAAE+B,WAJE;AAKTzC,QAAAA,OAAO,EAAEA,OALA;AAMTN,QAAAA,KAAK,EAAEA,KANE;AAOTQ,QAAAA,OAAO,EAAEA;AAPA,OAAb;AAUAgB,MAAAA,OAAO,CAACC,GAAR,CAAY6B,IAAZ;AACA,YAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAE,8BAAF,EAAkC;AAC1DC,QAAAA,MAAM,EAAE,MADkD;AAE1DC,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB,SAFiD;AAG1DN,QAAAA,IAAI,EAAEO,IAAI,CAACC,SAAL,CAAeR,IAAf;AAHoD,OAAlC,CAA5B;AAKA9B,MAAAA,OAAO,CAACC,GAAR,CAAYgC,QAAZ;AAEH,KAtBD,CAsBE,OAAOM,GAAP,EAAW;AACTvC,MAAAA,OAAO,CAACC,GAAR,CAAYsC,GAAZ;AACH;AACF,GA3BD;;AA6BA,QAAMC,YAAY,GAAG,YAAY;AAC/BC,IAAAA,OAAO,CAAC,IAAD,CAAP,CAD+B,CAG/B;;AACA,QAAI,CAACzE,KAAK,CAAC+B,IAAX,EAAiB;AACf,YAAM7C,QAAQ,CAACwF,IAAT,GAAgBC,iBAAhB,GACLrB,IADK,CACCsB,MAAD,IAAY;AAChB5C,QAAAA,OAAO,CAACC,GAAR,CAAY2C,MAAM,CAAC7C,IAAnB;AAEA,cAAM8C,QAAQ,GAAG;AACf,iBAAOD,MAAM,CAAC7C,IAAP,CAAY+C,GADJ;AAEf,mBAAS,eAAaF,MAAM,CAAC7C,IAAP,CAAY+C,GAFnB;AAGf,yBAAe;AAHA,SAAjB;AAKA9E,QAAAA,KAAK,CAAC+E,eAAN,CAAsBF,QAAtB;AAEA/C,QAAAA,oBAAoB,CAAC+C,QAAD,CAApB,CAVgB,CAWhB;AACA;AACD,OAdK,EAeLG,KAfK,CAeE5B,KAAD,IAAW;AAChB,YAAI6B,SAAS,GAAG7B,KAAK,CAAC8B,IAAtB;AACA,YAAIC,YAAY,GAAG/B,KAAK,CAACgC,OAAzB;AACApD,QAAAA,OAAO,CAACC,GAAR,CAAYmB,KAAK,CAACgC,OAAlB,EAHgB,CAIhB;AACD,OApBK,CAAN;AAsBD,KAvBD,MAuBO;AACLtD,MAAAA,oBAAoB;AACrB,KA7B8B,CAgC/B;;AAED,GAlCD;;AAoCA,QAAMuD,iBAAiB,GAAI9D,CAAD,IAAO;AAC/Bd,IAAAA,QAAQ,CAACc,CAAC,CAACE,MAAF,CAAS6D,KAAV,CAAR;AACD,GAFD;;AAKA,QAAMC,KAAK,GAAG,CAAC,wBAAD,EAA2B,kBAA3B,CAAd;;AAEA,QAAMC,cAAc,GAAIC,IAAD,IAAU;AAC/B,YAAQA,IAAR;AACE,WAAK,CAAL;AACE,4BAAO;AAAA,kCACG;AAAA,mCACK,QAAC,SAAD;AAAW,cAAA,QAAQ,MAAnB;AAAoB,cAAA,EAAE,EAAC,mBAAvB;AAA2C,cAAA,KAAK,EAAC,OAAjD;AAAyD,cAAA,YAAY,EAAC,EAAtE;AAAyE,cAAA,QAAQ,EAAElE,CAAC,IAAIV,QAAQ,CAACU,CAAC,CAACE,MAAF,CAAS6D,KAAV;AAAhG;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,kBADH,eAIG;AAAA,mCACI,QAAC,SAAD;AAAW,cAAA,EAAE,EAAC,mBAAd;AAAkC,cAAA,KAAK,EAAC,UAAxC;AAAmD,cAAA,YAAY,EAAE,EAAjE;AAAqE,cAAA,QAAQ,EAAE/D,CAAC,IAAIR,UAAU,CAACQ,CAAC,CAACE,MAAF,CAAS6D,KAAV;AAA9F;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJH,eAOG;AAAA,mCACA,QAAC,gBAAD;AACI,cAAA,OAAO,eACP,QAAC,QAAD;AACI,gBAAA,OAAO,EAAE5E,OADb;AAEI,gBAAA,QAAQ,EAAEa,CAAC,IAAI;AACXZ,kBAAAA,UAAU,CAACY,CAAC,CAACE,MAAF,CAASiE,OAAV,CAAV;AACH,iBAJL;AAKI,gBAAA,IAAI,EAAC,SALT;AAMI,gBAAA,KAAK,EAAC;AANV;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAWI,cAAA,KAAK,EAAC;AAXV;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBAPH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;;AAuBF,WAAK,CAAL;AACE,4BAAO;AAAA,kCAEH;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,QAAQ,EAAEpE,iBAFd,CAGI;;AAHJ;AAAA;AAAA;AAAA;AAAA,kBAFG,eAOF;AAAA,mCACD,QAAC,WAAD;AAAa,cAAA,SAAS,EAAErB,OAAO,CAAC0F,WAAhC;AAAA,sCACI,QAAC,UAAD;AAAY,gBAAA,EAAE,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,MAAD;AACA,gBAAA,OAAO,EAAC,0BADR;AAEA,gBAAA,EAAE,EAAC,oBAFH;AAGA,gBAAA,KAAK,EAAEnF,KAHP;AAIA,gBAAA,QAAQ,EAAE6E,iBAJV;AAAA,wCAMA,QAAC,QAAD;AAAU,kBAAA,KAAK,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANA,eAOA,QAAC,QAAD;AAAU,kBAAA,KAAK,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPA,eAQA,QAAC,QAAD;AAAU,kBAAA,KAAK,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBARA,eASA,QAAC,QAAD;AAAU,kBAAA,KAAK,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBATA,eAUA,QAAC,QAAD;AAAU,kBAAA,KAAK,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAVA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADC;AAAA;AAAA;AAAA;AAAA,kBAPE,eAwBH;AAAA,mCACI,QAAC,SAAD;AAAW,cAAA,EAAE,EAAC,mBAAd;AAAkC,cAAA,KAAK,EAAC,SAAxC;AAAkD,cAAA,YAAY,EAAE,EAAhE;AAAoE,cAAA,QAAQ,EAAE9D,CAAC,IAAIN,UAAU,CAACM,CAAC,CAACE,MAAF,CAAS6D,KAAV;AAA7F;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAxBG;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;;AA8BF;AACE,eAAO,cAAP;AAzDJ;AA2DD,GA5DD;;AA8DA,QAAM,CAACM,IAAD,EAAOnB,OAAP,IAAkBjH,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMqI,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,QAAIA,MAAM,KAAK,WAAf,EAA4B;AAC1B;AACD;;AAEDtB,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAND;;AAQAhH,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAIyD,YAAY,IAAI,SAApB,EAA+B;AAC7BlB,MAAAA,KAAK,CAAC6F,WAAN;AACA7F,MAAAA,KAAK,CAACgG,cAAN;AACD;AAEF,GAPQ,EAON,CAAC9E,YAAD,CAPM,CAAT;AASA,sBACE;AAAK,IAAA,SAAS,EAAEjB,OAAO,CAACZ,IAAxB;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,UAAU,EAAEa,UAArB;AAAiC,MAAA,WAAW,EAAC,UAA7C;AAAA,gBACGqF,KAAK,CAACU,GAAN,CAAU,CAACC,KAAD,EAAQC,KAAR,kBACT,QAAC,IAAD;AAAA,gCACE,QAAC,SAAD;AAAA,oBAAYD;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,WAAD;AAAA,kCACE,QAAC,UAAD;AAAA,sBAAaV,cAAc,CAACW,KAAD;AAA3B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAElG,OAAO,CAACN,gBAAxB;AAAA,mCACE;AAAA,qCAEE,QAAC,MAAD;AACE,gBAAA,OAAO,EAAC,WADV;AAEE,gBAAA,KAAK,EAAC,SAFR;AAGE,gBAAA,OAAO,EAAEO,UAAU,KAAKqF,KAAK,CAACa,MAAN,GAAe,CAA9B,GAAkC5B,YAAlC,GAAiDf,UAH5D;AAIE,gBAAA,SAAS,EAAExD,OAAO,CAACV,MAJrB;AAKE,gBAAA,QAAQ,EAAE2B,YAAY,IAAI,EAL5B;AAAA,0BAOGhB,UAAU,KAAKqF,KAAK,CAACa,MAAN,GAAe,CAA9B,GAAkC,QAAlC,GAA6C;AAPhD;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAWF,KAAX;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAyBE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEN,IAAhB;AACC,MAAA,OAAO,EAAE1E,YAAY,GAAG,GADzB;AAEC,MAAA,MAAM,eACJ,QAAC,KAAD,CAAO,QAAP;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,IAAI,EAAC,OAAjB;AAAyB,wBAAW,OAApC;AAA4C,UAAA,KAAK,EAAC,SAAlD;AAA4D,UAAA,OAAO,EAAE2E,WAArE;AAAA,iCACE,QAAC,SAAD;AAAW,YAAA,QAAQ,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAHH;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD;;GA7Re9F,qB;UAEEZ,S;;;KAFFY,qB;;AA+RhB,MAAMsG,MAAM,GAAIjH,KAAD,KAAY;AACvBC,EAAAA,IAAI,EAAE;AACJiH,IAAAA,MAAM,EAAE,CADJ;AAEJxG,IAAAA,OAAO,EAAEV,KAAK,CAACK,OAAN,CAAc,CAAd;AAFL,GADiB;AAKvB8G,EAAAA,WAAW,EAAE;AACXC,IAAAA,QAAQ,EAAE,UADC;AAEXC,IAAAA,KAAK,EAAErH,KAAK,CAACK,OAAN,CAAc,CAAd,CAFI;AAGXiH,IAAAA,GAAG,EAAEtH,KAAK,CAACK,OAAN,CAAc,CAAd,CAHM;AAIXkH,IAAAA,KAAK,EAAEvH,KAAK,CAACwH,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AAJI;AALU,CAAZ,CAAf;;AAaE,MAAMC,WAAW,GAAGpJ,UAAU,CAAC2I,MAAD,CAAV,CAAoBrG,KAAD,IAAW;AAChD,QAAM;AAAE+G,IAAAA,QAAF;AAAY9G,IAAAA,OAAZ;AAAqB+G,IAAAA,OAArB;AAA8B,OAAGC;AAAjC,MAA2CjH,KAAjD;AACA,sBACE,QAAC,cAAD;AAAgB,IAAA,iBAAiB,MAAjC;AAAkC,IAAA,SAAS,EAAEC,OAAO,CAACZ,IAArD;AAAA,OAA+D4H,KAA/D;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA,gBAA0BF;AAA1B;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,OAAO,gBACN,QAAC,UAAD;AAAY,oBAAW,OAAvB;AAA+B,MAAA,SAAS,EAAE/G,OAAO,CAACsG,WAAlD;AAA+D,MAAA,OAAO,EAAES,OAAxE;AAAA,6BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADM,GAIJ,IANN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAZmB,CAApB;AAcA,MAAME,aAAa,GAAGxJ,UAAU,CAAE0B,KAAD,KAAY;AAC3CC,EAAAA,IAAI,EAAE;AACJS,IAAAA,OAAO,EAAEV,KAAK,CAACK,OAAN,CAAc,CAAd;AADL;AADqC,CAAZ,CAAD,CAAV,CAIlB1B,gBAJkB,CAAtB;AAMA,MAAMoJ,aAAa,GAAGzJ,UAAU,CAAE0B,KAAD,KAAY;AAC3CC,EAAAA,IAAI,EAAE;AACJiH,IAAAA,MAAM,EAAE,CADJ;AAEJxG,IAAAA,OAAO,EAAEV,KAAK,CAACK,OAAN,CAAc,CAAd;AAFL;AADqC,CAAZ,CAAD,CAAV,CAKlBzB,gBALkB,CAAtB;AAOF,eAAe,SAASoJ,iBAAT,CAA2BpH,KAA3B,EAAkC;AAAA;;AAE7C,QAAM,CAAC4F,IAAD,EAAOnB,OAAP,IAAkBlH,KAAK,CAACC,QAAN,CAAe,KAAf,CAAxB;;AAEA,QAAM6J,eAAe,GAAG,MAAM;AAC5B5C,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAGA,QAAMoB,WAAW,GAAG,MAAM;AACxBpB,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,UAAhB;AAA2B,MAAA,KAAK,EAAC,SAAjC;AAA2C,MAAA,OAAO,EAAE4C,eAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAExB,WAAjB;AAA8B,yBAAgB,yBAA9C;AAAwE,MAAA,IAAI,EAAED,IAA9E;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,EAAE,EAAC,yBAAhB;AAA0C,QAAA,OAAO,EAAEC,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,aAAD;AAAe,QAAA,QAAQ,MAAvB;AAAA,+BACE,QAAC,qBAAD;AAAuB,UAAA,WAAW,EAAGA,WAArC;AAAkD,UAAA,IAAI,EAAE7F,KAAK,CAAC+B,IAA9D;AAAoE,UAAA,eAAe,EAAE/B,KAAK,CAAC+E,eAA3F;AAA4G,UAAA,cAAc,EAAE/E,KAAK,CAACgG;AAAlI;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;IA7BqBoB,iB;;MAAAA,iB","sourcesContent":["import React, {useState, useEffect}from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Snackbar from '@material-ui/core/Snackbar';\n// import MuiAlert from '@material-ui/lab/Alert';\n\n// function Alert(props) {\n//   return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n// }\n\n\nimport {storage, firebase} from './App'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  resetContainer: {\n    padding: theme.spacing(3),\n  },\n}));\n\n\n\nexport function VerticalLinearStepper(props) {\n\n  const classes = useStyles();\n\n  // const [currentUser, setCurrentUser] = useState(props.user)\n  const [activeStep, setActiveStep] = useState(0);\n  const [imageAsFile, setImageAsFile] = useState('')\n  const [imageAsUrl, setImageAsUrl] = useState('')\n  const [stage, setStage] = useState(\"Seed\")\n  const [forSale, setForSale] = useState(false)\n  const [plant, setPlant] = useState(\"\")\n  const [variety, setvariety] = useState(\"\")\n  const [caption, setCaption] = useState(\"\")\n  const [uploadStatus, setUploadStatus] = useState(\"\")\n\n  const storageRef = storage.ref();\n\n\n  const handleImageAsFile = (e) => {\n    const image = e.target.files[0]\n    setImageAsFile(imageAsFile => (image))\n  }\n\n\n  const imageFileType = (name) => {\n    if (name.endsWith(\".jpg\") || name.endsWith(\".jpeg\") || name.endsWith(\".png\")) return true\n\n    return false\n  }\n\n  const handleFireBaseUpload = (user = props.user) => {\n    // e.preventDefault()\n    console.log('start of upload')\n    // async magic goes here...\n\n    if(imageAsFile === '' || !imageFileType(imageAsFile.name) ) {\n        let errorMsg = `not a jpeg/png image, the image file is a ${typeof(imageAsFile)}`\n        setUploadStatus(\"error: \" +errorMsg)\n    } else{\n        var current = new Date().valueOf();\n        const url = `/images/${current}${imageAsFile.name}`\n        const imageRef = storageRef.child(url)\n\n        var uploadTask = imageRef.put(imageAsFile)\n\n        uploadTask.on('state_changed', \n            (snapshot) => {\n            // Observe state change events such as progress, pause, and resume\n            // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n            var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            setUploadStatus(progress)\n            console.log('Upload is ' + progress + '% done');\n            switch (snapshot.state) {\n                case firebase.storage.TaskState.PAUSED: // or 'paused'\n                console.log('Upload is paused');\n                break;\n                case firebase.storage.TaskState.RUNNING: // or 'running'\n                console.log('Upload is running');\n                break;\n            }\n            }, \n            (error) => {\n            // Handle unsuccessful uploads\n                console.log(\"error\")\n                setUploadStatus(\"error\")\n\n            }, \n            () => {\n                // Handle successful uploads on complete\n                // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n                uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\n                  console.log('File available at', downloadURL);\n                  setImageAsUrl(downloadURL)\n                  onPostData(downloadURL, user)\n                  setUploadStatus(\"success\")\n                });\n              }\n        ); \n  \n    }\n\n  \n  }\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const onPostData = async (downloadURL, user) => {\n\n    try {\n        const email = user ? user.email : \"anonymous\"\n        const plantName = plant? plant: \"Unknown Plant\"\n\n        const body = {\n            user_id : email,\n            plant: plantName,\n            for_sale: forSale,\n            image: downloadURL,\n            variety: variety,\n            stage: stage,\n            caption: caption\n        }\n\n        console.log(body)\n        const response = await fetch( \"http://localhost:5000/plants\", {\n            method: \"POST\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(body)\n        });\n        console.log(response)\n\n    } catch (err){\n        console.log(err)\n    }\n  }\n\n  const handleSubmit = async () => {\n    setOpen(true)\n\n    // check if signed in, if not, vreate anonymous session\n    if (!props.user) {\n      await firebase.auth().signInAnonymously()\n      .then((result) => {\n        console.log(result.user)\n\n        const tempUser = {\n          'uid': result.user.uid,\n          'email': \"anon-user-\"+result.user.uid,\n          'isAnonymous': true\n        }\n        props.setUserFunction(tempUser)\n\n        handleFireBaseUpload(tempUser)\n        // setCurrentUser(tempUser)\n        // Signed in..\n      })\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        console.log(error.message)\n        // ...\n      });\n     \n    } else {\n      handleFireBaseUpload()\n    }\n    \n   \n    // props.handleClose();\n\n  };\n\n  const handleStageChange = (e) => {\n    setStage(e.target.value)\n  };\n\n\n  const steps = ['Create a Plant Profile', 'Upload your post'];\n\n  const getStepContent = (step) => {\n    switch (step) {\n      case 0:\n        return <form>\n                  <div>                 \n                       <TextField required id=\"standard-required\" label=\"Plant\" defaultValue=\"\" onChange={e => setPlant(e.target.value)} />\n                  </div>\n                  <div>\n                      <TextField id=\"standard-required\" label=\"Variety \" defaultValue={\"\"} onChange={e => setvariety(e.target.value)}/>\n                  </div>\n                  <div>\n                  <FormControlLabel\n                      control={\n                      <Checkbox\n                          checked={forSale}\n                          onChange={e => {\n                              setForSale(e.target.checked)\n                          }}\n                          name=\"forSale\"\n                          color=\"primary\"\n                      />\n                      }\n                      label=\"For Sale\"\n                  />\n                  </div>\n              </form>\n      case 1:\n        return <form>\n           \n            <input\n                type=\"file\"\n                onChange={handleImageAsFile}\n                // hidden\n            />\n             <div>\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Stage</InputLabel>\n                <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={stage}\n                onChange={handleStageChange}\n                >\n                <MenuItem value='Seed'>Seed</MenuItem>\n                <MenuItem value='Seedling'>Seedling</MenuItem>\n                <MenuItem value='Flowering'>Flowering</MenuItem>\n                <MenuItem value='Fruiting'>Fruiting</MenuItem>\n                <MenuItem value='Mature'>Mature</MenuItem>\n                </Select>\n            </FormControl>\n            </div>\n            <div>\n                <TextField id=\"standard-required\" label=\"Caption\" defaultValue={\"\"} onChange={e => setCaption(e.target.value)} />\n            </div>\n\n\n        </form>;\n      default:\n        return 'Unknown step';\n    }\n  }\n  \n  const [open, setOpen] = useState(false)\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    if (uploadStatus == \"success\") {\n      props.handleClose()\n      props.reloadFunction();\n    }\n    \n  }, [uploadStatus]);\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\n        {steps.map((label, index) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n            <StepContent>\n              <Typography>{getStepContent(index)}</Typography>\n              <div className={classes.actionsContainer}>\n                <div>\n                 \n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={activeStep === steps.length - 1 ? handleSubmit : handleNext}\n                    className={classes.button}\n                    disabled={uploadStatus != \"\"}\n                  >\n                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                  </Button>\n                </div>\n              </div>\n            </StepContent>\n          </Step>\n        ))}\n      </Stepper>\n      <Snackbar open={open} \n       message={uploadStatus + '%'}\n       action={\n         <React.Fragment>\n           <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n             <CloseIcon fontSize=\"small\" />\n           </IconButton>\n         </React.Fragment>\n       }>\n       \n      </Snackbar>\n    \n    </div>\n  );\n}\n\nconst styles = (theme) => ({\n    root: {\n      margin: 0,\n      padding: theme.spacing(2),\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500],\n    },\n  });\n  \n  const DialogTitle = withStyles(styles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n      <MuiDialogTitle disableTypography className={classes.root} {...other}>\n        <Typography variant=\"h6\">{children}</Typography>\n        {onClose ? (\n          <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </MuiDialogTitle>\n    );\n  });\n  \n  const DialogContent = withStyles((theme) => ({\n    root: {\n      padding: theme.spacing(2),\n    },\n  }))(MuiDialogContent);\n  \n  const DialogActions = withStyles((theme) => ({\n    root: {\n      margin: 0,\n      padding: theme.spacing(1),\n    },\n  }))(MuiDialogActions);\n  \nexport default function CustomizedDialogs(props) {\n\n    const [open, setOpen] = React.useState(false);\n  \n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n    const handleClose = () => {\n      setOpen(false);\n    };\n  \n    return (\n      <div>\n        <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n          Upload Plant \n        </Button>\n        <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n          <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n            New Plant Profile\n          </DialogTitle>\n          <DialogContent dividers>\n            <VerticalLinearStepper handleClose= {handleClose} user={props.user} setUserFunction={props.setUserFunction} reloadFunction={props.reloadFunction}/>\n          </DialogContent>\n          {/* <DialogActions>\n         \n          </DialogActions> */}\n        </Dialog>\n      </div>\n    );\n  }\n  "]},"metadata":{},"sourceType":"module"}